spring:
  servlet:
    multipart:
      max-file-size: 100MB
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: chat-group
    producer:
      value-serializer: com.arinc.config.kafka.producer.serializer.CustomJsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false
  web:
    resources:
      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:C:/MySpace/LocalStorage/BazarChat/images
  datasource:
    username: postgres
    password: GrinBogdatebase1111
    url: jdbc:postgresql://localhost:2200/bazarchat
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope: openid,email,profile
          vk:
            client-name: VK
            client-id: ${VK_CLIENT_ID}
            client-secret: ${VK_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost/login
            scope: openid,email,profile
            provider: vk

        provider:
          vk:
              authorization-uri: https://oauth.vk.com/authorize
              token-uri: https://oauth.vk.com/access_token
              user-info-uri: "https://api.vk.com/method/users.get?v=5.121&fields=sex,city,country,photo_max,has_photo"
              user-name-attribute: first_name
logging:
  level:
    org:
      springframework:
        security: DEBUG

image:
  path: C:/MySpace/LocalStorage/BazarChat/images/